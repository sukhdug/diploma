Use Case #1

Роль: пользователь
С какой целью пользуется ботом: покупка книги автора: {{автор}}
1. 
Действие пользователя: находит бота
2. 
Действие пользователя: жмет кнопку "старт", после этого он уже может пользоваться ботом.
Действие программы: бот выводит приветственное сообщение и мини-справку команд бота.
3. 
Действие пользователя: пользователь вводит "помощь" и отправит команду.
Действие программы: бот выводит список команд и мини-справку о том, что отправить, куда нажать, как пользоваться ботом.
4. 
Действие пользователя: вводит команду "автор {{имя фамилия автора}}" и отправит команду боту.
Действие программы: бот выводит список всех авторов, где у них фамилия или имя {{имя фамилия автора}}.
5.
Действие пользователя: выбирает нужного автора и заходит в страницу автора.
Действие программы: в странице автора показывает следующее содержание: имя фамилия отчество автора, дата рождения (дата смерти), краткая биография, кнопка "показать книги".
6. 
Действие пользователя: нажимает кнопку "показать книги" на странице автора и заходит в страницу книг автора.
Действие программы: показывает список книг автора.
7. 
Действие пользователя: выбирает книгу из списка и заходит в страницу книги.
Действие программы: показывает название, год издания, isbn, автора, краткое содержание, ссылка "купить книгу", кнопка "сохранить книгу".
8. Действие пользователя: нажимает ссылку "купить книгу".
Действие программы: перенаправляет пользователя на сайт для покупки книги.

Use Case #2

Роль: пользователь
Цель: получение уведомлений о книгах категории: {{жанр}}
Сначала 1 и 2 действие Use Case #1
3. 
Пользователь вводит команду "подписка" и отправит системе, затем программа показывает список категорий для подписки, пользователь может выбрать одну или более категорий, или пункт "все категории". Бот начнет отправлять пользователю книги выбранных категорий каждый день. Чтобы отказаться от подписки пользователю нужно еще раз нужно ввести команду "подписка" и выбрать пункт "не получать уведомления".

Use Case #3
Роль: пользователь
Цель: получение рекомендаций для прочтения
Сначала 1 и 2 действие Use Case #1
Пользователь вводит команду "рекомендации"
Первый вариант: бот выводит сообщение, что у пользователя пока нет любимых книг и варианты, что нужно делать, чтобы система поняла, какие книги предлагать. Предложенные варианты бота: найти свои прочитанные книги и добавить в "прочитанные" или в "любимые", либо пройти опрос. 
Второй вариант: Если пользователь уже пользовался некоторое время ботом и добавил несколько книг в "прочитанные" или "любимые", то бот выводит {{какую-нибудь книгу}} на основе тех книг, которые у пользователя "любимые" и "прочитанные". На выводе будет обложка, название, автор, год издания книги, а также кнопки "посмотреть" и "дальше". Если пользователь нажмет кнопку "посмотреть", то заходит в страницу книги. Если нажмет "дальше", то бот покажет другую книгу. Чтобы выйти из рекомендаций, пользователь может ввести другую команду, например, "поиск" (либо можно добавить кнопку "выйти", где перенаправляет пользователя на главный экран (главный экран - это экран, где показана мини-справка бота и содержание бота)).
Третий вариант: Если у пользователя еще нет любимых и прочитанных книг, то бот предлагает пройти опрос, чтобы система поняла, какие книги предлагать (я правда пока еще не знаю, как создать такой опрос).
Пользователь также может подписаться на получение уведомлений о рекомендациях.

Use Case #4
Роль: пользователь
Цель: поиск книги жанра {{жанр}} для покупки
Сначала 1 и 2 действие Use Case #1
Пользователь вводит команду "жанр {{название жанра}}", бот выводит список книг жанра {{название жанра}}. Если система не нашла жанра, то бот выводит соотвествующее сообщение. 

Use Case #5
Роль: пользователь
Цель: поиск прочитанной книги
Сначала 1 и 2 действие Use Case #1
Пользователь вводит команду "книга {{название книги}}", затем бот выводит список книг, где в названии {{название книги}}, если не найдена, то соответствующее сообщение. Пользователь выбирает из списка прочитанную книгу (если правда есть в списке) и заходит в страницу книги, там будут кнопки "добавить в прочитанные", "хочу прочитать", "любимая книга", ссылка "купить книгу". Если пользователь добавит книгу в "прочитанные", то он может потом посмотреть вводив команду "прочитанные".

Use Case #6
Роль: пользователь
Цель: просмотр книг, добавленные в "прочитанные", "любимые" и "хочу прочитать".
Сначала 1 и 2 действие Use Case #1

Пользователь вводит команду "прочитанные" и отправляет, затем бот показывает список всех книг пользователя, которые добавлены в прочитанные. Если там нет книг, то выводит соответствующее сообщение, для просмотра "любимых" книг и "хочу прочитать", то будут команды соответственно. 





Механизм работы бота для рекомендации книг

Как построен механизм рекомендации книг?

Система рекомендации книг работает по такому принципу: система формирует рекомендацию на основе поведения пользователя.  Т.е. система проанализирует тот контент, который нравится пользователю и составляет весь набор его предпочтений (жанры, авторы, слова, годы), таким образом система узнает какие критерии нравится пользователю, сопоставляет все эти данные и отправляет рекомендацию. Например, если какому-либо пользователю обычно нравятся книги определенного жанра, то система будет отбирать книги именно того жанра с высокими оценками, похожих авторов или определенного года. Допустим, пользователю нравится две книги жанра "психология", одна книга жанра "кулинария", то вероятность того, что пользователю нравится книги жанра "психология" высокая, таким образом, система будет рекомендовать книги жанра "психология" в два раза чаще, чем книги жанра "кулинария". Если пользователю не нравятся книги по программированию, то такие книги вообще не бдудет в рекомендованных. Есть еще такой вариант: пользователю нравится 5 книг 1900-1950 гг., одна книга 1800г., две книги 1990-2010гг. Тогда система будет рекомендовать книги 1900-1950 гг. тех же жанров в два-три раза чаще, чем других годов. Надо будет выбрать алгоритм для отбора книг или создать свой собственный.

Это еще не полное описание того, как будет работать система рекомендации. С каких сайтов будем собрать книги рекомендации, пока не продумал. Скорее всего с сайтов Amazon и(или) GoodReads.

Источники: 
https://habrahabr.ru/post/176549/
https://www.ibm.com/developerworks/ru/library/os-recommender1/index.html
https://habrahabr.ru/company/surfingbird/blog/170081/
